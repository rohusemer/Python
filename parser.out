Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOL
    DOT
    LCOR
    LKEY
    RCOR
    RKEY

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> statement program
Rule 3     statement -> assing
Rule 4     statement -> statementWhile
Rule 5     statement -> statementFor
Rule 6     statement -> statementIf
Rule 7     statement -> callPrint
Rule 8     statement -> callInput
Rule 9     statement -> BREAK
Rule 10    assing -> id EQUALS expr
Rule 11    assing -> id EQUALS callInput
Rule 12    assing -> id PLUS PLUS
Rule 13    assing -> id MINUS MINUS
Rule 14    id -> ID
Rule 15    expr -> expr PLUS term
Rule 16    expr -> expr MINUS term
Rule 17    expr -> term
Rule 18    expr -> MINUS expr
Rule 19    term -> term TIMES factor
Rule 20    term -> term POT factor
Rule 21    term -> term DIVIDE factor
Rule 22    term -> term PERCENT factor
Rule 23    term -> factor
Rule 24    factor -> NUMBER
Rule 25    factor -> ID
Rule 26    factor -> TEXT
Rule 27    factor -> CADENA
Rule 28    factor -> group
Rule 29    callPrint -> PRINT LPARENT term COMMA ID RPARENT
Rule 30    callPrint -> PRINT group
Rule 31    callPrint -> PRINT LPARENT RPARENT
Rule 32    callPrint -> callPrint statement
Rule 33    group -> LPARENT expr RPARENT
Rule 34    callInput -> INPUT group
Rule 35    callInput -> int LPARENT INPUT group RPARENT
Rule 36    callInput -> callInput statement
Rule 37    break -> BREAK
Rule 38    int -> INT
Rule 39    statementIf -> IF condition COLOM statement
Rule 40    statementWhile -> WHILE condition COLOM statement
Rule 41    statementWhile -> WHILE condition COLOM statement break
Rule 42    statementWhile -> WHILE condition COLOM statement break statement
Rule 43    condition -> comparation
Rule 44    condition -> comparation andor condition
Rule 45    comparation -> factor compara factor
Rule 46    compara -> LT
Rule 47    compara -> GT
Rule 48    compara -> LTE
Rule 49    compara -> GTE
Rule 50    compara -> COMPARATOR
Rule 51    compara -> UNEQUALS
Rule 52    andor -> OR
Rule 53    andor -> AND
Rule 54    statementFor -> FOR TEXT IN ID COLOM statement
Rule 55    statementFor -> FOR TEXT IN form
Rule 56    form -> RANGE LPARENT NUMBER RPARENT COLOM statement
Rule 57    form -> RANGE LPARENT ID RPARENT COLOM
Rule 58    form -> RANGE LPARENT LEN LPARENT id RPARENT RPARENT COLOM statement

Terminals, with rules where they appear

AND                  : 53
BOOL                 : 
BREAK                : 9 37
CADENA               : 27
COLOM                : 39 40 41 42 54 56 57 58
COMMA                : 29
COMPARATOR           : 50
DIVIDE               : 21
DOT                  : 
EQUALS               : 10 11
FOR                  : 54 55
GT                   : 47
GTE                  : 49
ID                   : 14 25 29 54 57
IF                   : 39
IN                   : 54 55
INPUT                : 34 35
INT                  : 38
LCOR                 : 
LEN                  : 58
LKEY                 : 
LPARENT              : 29 31 33 35 56 57 58 58
LT                   : 46
LTE                  : 48
MINUS                : 13 13 16 18
NUMBER               : 24 56
OR                   : 52
PERCENT              : 22
PLUS                 : 12 12 15
POT                  : 20
PRINT                : 29 30 31
RANGE                : 56 57 58
RCOR                 : 
RKEY                 : 
RPARENT              : 29 31 33 35 56 57 58 58
TEXT                 : 26 54 55
TIMES                : 19
UNEQUALS             : 51
WHILE                : 40 41 42
error                : 

Nonterminals, with rules where they appear

andor                : 44
assing               : 3
break                : 41 42
callInput            : 8 11 36
callPrint            : 7 32
compara              : 45
comparation          : 43 44
condition            : 39 40 41 42 44
expr                 : 10 15 16 18 33
factor               : 19 20 21 22 23 45 45
form                 : 55
group                : 28 30 34 35
id                   : 10 11 12 13 58
int                  : 35
program              : 2 0
statement            : 1 2 32 36 39 40 41 42 42 54 56 58
statementFor         : 5
statementIf          : 6
statementWhile       : 4
term                 : 15 16 17 19 20 21 22 29

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . statement program
    (3) statement -> . assing
    (4) statement -> . statementWhile
    (5) statement -> . statementFor
    (6) statement -> . statementIf
    (7) statement -> . callPrint
    (8) statement -> . callInput
    (9) statement -> . BREAK
    (10) assing -> . id EQUALS expr
    (11) assing -> . id EQUALS callInput
    (12) assing -> . id PLUS PLUS
    (13) assing -> . id MINUS MINUS
    (40) statementWhile -> . WHILE condition COLOM statement
    (41) statementWhile -> . WHILE condition COLOM statement break
    (42) statementWhile -> . WHILE condition COLOM statement break statement
    (54) statementFor -> . FOR TEXT IN ID COLOM statement
    (55) statementFor -> . FOR TEXT IN form
    (39) statementIf -> . IF condition COLOM statement
    (29) callPrint -> . PRINT LPARENT term COMMA ID RPARENT
    (30) callPrint -> . PRINT group
    (31) callPrint -> . PRINT LPARENT RPARENT
    (32) callPrint -> . callPrint statement
    (34) callInput -> . INPUT group
    (35) callInput -> . int LPARENT INPUT group RPARENT
    (36) callInput -> . callInput statement
    (14) id -> . ID
    (38) int -> . INT

    BREAK           shift and go to state 9
    WHILE           shift and go to state 11
    FOR             shift and go to state 12
    IF              shift and go to state 14
    PRINT           shift and go to state 15
    INPUT           shift and go to state 16
    ID              shift and go to state 13
    INT             shift and go to state 18

    program                        shift and go to state 1
    statement                      shift and go to state 2
    assing                         shift and go to state 3
    statementWhile                 shift and go to state 4
    statementFor                   shift and go to state 5
    statementIf                    shift and go to state 6
    callPrint                      shift and go to state 7
    callInput                      shift and go to state 8
    id                             shift and go to state 10
    int                            shift and go to state 17

state 1

    (0) S' -> program .



state 2

    (1) program -> statement .
    (2) program -> statement . program
    (1) program -> . statement
    (2) program -> . statement program
    (3) statement -> . assing
    (4) statement -> . statementWhile
    (5) statement -> . statementFor
    (6) statement -> . statementIf
    (7) statement -> . callPrint
    (8) statement -> . callInput
    (9) statement -> . BREAK
    (10) assing -> . id EQUALS expr
    (11) assing -> . id EQUALS callInput
    (12) assing -> . id PLUS PLUS
    (13) assing -> . id MINUS MINUS
    (40) statementWhile -> . WHILE condition COLOM statement
    (41) statementWhile -> . WHILE condition COLOM statement break
    (42) statementWhile -> . WHILE condition COLOM statement break statement
    (54) statementFor -> . FOR TEXT IN ID COLOM statement
    (55) statementFor -> . FOR TEXT IN form
    (39) statementIf -> . IF condition COLOM statement
    (29) callPrint -> . PRINT LPARENT term COMMA ID RPARENT
    (30) callPrint -> . PRINT group
    (31) callPrint -> . PRINT LPARENT RPARENT
    (32) callPrint -> . callPrint statement
    (34) callInput -> . INPUT group
    (35) callInput -> . int LPARENT INPUT group RPARENT
    (36) callInput -> . callInput statement
    (14) id -> . ID
    (38) int -> . INT

    $end            reduce using rule 1 (program -> statement .)
    BREAK           shift and go to state 9
    WHILE           shift and go to state 11
    FOR             shift and go to state 12
    IF              shift and go to state 14
    PRINT           shift and go to state 15
    INPUT           shift and go to state 16
    ID              shift and go to state 13
    INT             shift and go to state 18

    statement                      shift and go to state 2
    program                        shift and go to state 19
    assing                         shift and go to state 3
    statementWhile                 shift and go to state 4
    statementFor                   shift and go to state 5
    statementIf                    shift and go to state 6
    callPrint                      shift and go to state 7
    callInput                      shift and go to state 8
    id                             shift and go to state 10
    int                            shift and go to state 17

state 3

    (3) statement -> assing .

    BREAK           reduce using rule 3 (statement -> assing .)
    WHILE           reduce using rule 3 (statement -> assing .)
    FOR             reduce using rule 3 (statement -> assing .)
    IF              reduce using rule 3 (statement -> assing .)
    PRINT           reduce using rule 3 (statement -> assing .)
    INPUT           reduce using rule 3 (statement -> assing .)
    ID              reduce using rule 3 (statement -> assing .)
    INT             reduce using rule 3 (statement -> assing .)
    $end            reduce using rule 3 (statement -> assing .)


state 4

    (4) statement -> statementWhile .

    BREAK           reduce using rule 4 (statement -> statementWhile .)
    WHILE           reduce using rule 4 (statement -> statementWhile .)
    FOR             reduce using rule 4 (statement -> statementWhile .)
    IF              reduce using rule 4 (statement -> statementWhile .)
    PRINT           reduce using rule 4 (statement -> statementWhile .)
    INPUT           reduce using rule 4 (statement -> statementWhile .)
    ID              reduce using rule 4 (statement -> statementWhile .)
    INT             reduce using rule 4 (statement -> statementWhile .)
    $end            reduce using rule 4 (statement -> statementWhile .)


state 5

    (5) statement -> statementFor .

    BREAK           reduce using rule 5 (statement -> statementFor .)
    WHILE           reduce using rule 5 (statement -> statementFor .)
    FOR             reduce using rule 5 (statement -> statementFor .)
    IF              reduce using rule 5 (statement -> statementFor .)
    PRINT           reduce using rule 5 (statement -> statementFor .)
    INPUT           reduce using rule 5 (statement -> statementFor .)
    ID              reduce using rule 5 (statement -> statementFor .)
    INT             reduce using rule 5 (statement -> statementFor .)
    $end            reduce using rule 5 (statement -> statementFor .)


state 6

    (6) statement -> statementIf .

    BREAK           reduce using rule 6 (statement -> statementIf .)
    WHILE           reduce using rule 6 (statement -> statementIf .)
    FOR             reduce using rule 6 (statement -> statementIf .)
    IF              reduce using rule 6 (statement -> statementIf .)
    PRINT           reduce using rule 6 (statement -> statementIf .)
    INPUT           reduce using rule 6 (statement -> statementIf .)
    ID              reduce using rule 6 (statement -> statementIf .)
    INT             reduce using rule 6 (statement -> statementIf .)
    $end            reduce using rule 6 (statement -> statementIf .)


state 7

    (7) statement -> callPrint .
    (32) callPrint -> callPrint . statement
    (3) statement -> . assing
    (4) statement -> . statementWhile
    (5) statement -> . statementFor
    (6) statement -> . statementIf
    (7) statement -> . callPrint
    (8) statement -> . callInput
    (9) statement -> . BREAK
    (10) assing -> . id EQUALS expr
    (11) assing -> . id EQUALS callInput
    (12) assing -> . id PLUS PLUS
    (13) assing -> . id MINUS MINUS
    (40) statementWhile -> . WHILE condition COLOM statement
    (41) statementWhile -> . WHILE condition COLOM statement break
    (42) statementWhile -> . WHILE condition COLOM statement break statement
    (54) statementFor -> . FOR TEXT IN ID COLOM statement
    (55) statementFor -> . FOR TEXT IN form
    (39) statementIf -> . IF condition COLOM statement
    (29) callPrint -> . PRINT LPARENT term COMMA ID RPARENT
    (30) callPrint -> . PRINT group
    (31) callPrint -> . PRINT LPARENT RPARENT
    (32) callPrint -> . callPrint statement
    (34) callInput -> . INPUT group
    (35) callInput -> . int LPARENT INPUT group RPARENT
    (36) callInput -> . callInput statement
    (14) id -> . ID
    (38) int -> . INT

  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    $end            reduce using rule 7 (statement -> callPrint .)
    BREAK           shift and go to state 9
    WHILE           shift and go to state 11
    FOR             shift and go to state 12
    IF              shift and go to state 14
    PRINT           shift and go to state 15
    INPUT           shift and go to state 16
    ID              shift and go to state 13
    INT             shift and go to state 18

  ! BREAK           [ reduce using rule 7 (statement -> callPrint .) ]
  ! WHILE           [ reduce using rule 7 (statement -> callPrint .) ]
  ! FOR             [ reduce using rule 7 (statement -> callPrint .) ]
  ! IF              [ reduce using rule 7 (statement -> callPrint .) ]
  ! PRINT           [ reduce using rule 7 (statement -> callPrint .) ]
  ! INPUT           [ reduce using rule 7 (statement -> callPrint .) ]
  ! ID              [ reduce using rule 7 (statement -> callPrint .) ]
  ! INT             [ reduce using rule 7 (statement -> callPrint .) ]

    callPrint                      shift and go to state 7
    statement                      shift and go to state 20
    assing                         shift and go to state 3
    statementWhile                 shift and go to state 4
    statementFor                   shift and go to state 5
    statementIf                    shift and go to state 6
    callInput                      shift and go to state 8
    id                             shift and go to state 10
    int                            shift and go to state 17

state 8

    (8) statement -> callInput .
    (36) callInput -> callInput . statement
    (3) statement -> . assing
    (4) statement -> . statementWhile
    (5) statement -> . statementFor
    (6) statement -> . statementIf
    (7) statement -> . callPrint
    (8) statement -> . callInput
    (9) statement -> . BREAK
    (10) assing -> . id EQUALS expr
    (11) assing -> . id EQUALS callInput
    (12) assing -> . id PLUS PLUS
    (13) assing -> . id MINUS MINUS
    (40) statementWhile -> . WHILE condition COLOM statement
    (41) statementWhile -> . WHILE condition COLOM statement break
    (42) statementWhile -> . WHILE condition COLOM statement break statement
    (54) statementFor -> . FOR TEXT IN ID COLOM statement
    (55) statementFor -> . FOR TEXT IN form
    (39) statementIf -> . IF condition COLOM statement
    (29) callPrint -> . PRINT LPARENT term COMMA ID RPARENT
    (30) callPrint -> . PRINT group
    (31) callPrint -> . PRINT LPARENT RPARENT
    (32) callPrint -> . callPrint statement
    (34) callInput -> . INPUT group
    (35) callInput -> . int LPARENT INPUT group RPARENT
    (36) callInput -> . callInput statement
    (14) id -> . ID
    (38) int -> . INT

  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    $end            reduce using rule 8 (statement -> callInput .)
    BREAK           shift and go to state 9
    WHILE           shift and go to state 11
    FOR             shift and go to state 12
    IF              shift and go to state 14
    PRINT           shift and go to state 15
    INPUT           shift and go to state 16
    ID              shift and go to state 13
    INT             shift and go to state 18

  ! BREAK           [ reduce using rule 8 (statement -> callInput .) ]
  ! WHILE           [ reduce using rule 8 (statement -> callInput .) ]
  ! FOR             [ reduce using rule 8 (statement -> callInput .) ]
  ! IF              [ reduce using rule 8 (statement -> callInput .) ]
  ! PRINT           [ reduce using rule 8 (statement -> callInput .) ]
  ! INPUT           [ reduce using rule 8 (statement -> callInput .) ]
  ! ID              [ reduce using rule 8 (statement -> callInput .) ]
  ! INT             [ reduce using rule 8 (statement -> callInput .) ]

    callInput                      shift and go to state 8
    statement                      shift and go to state 21
    assing                         shift and go to state 3
    statementWhile                 shift and go to state 4
    statementFor                   shift and go to state 5
    statementIf                    shift and go to state 6
    callPrint                      shift and go to state 7
    id                             shift and go to state 10
    int                            shift and go to state 17

state 9

    (9) statement -> BREAK .

    BREAK           reduce using rule 9 (statement -> BREAK .)
    WHILE           reduce using rule 9 (statement -> BREAK .)
    FOR             reduce using rule 9 (statement -> BREAK .)
    IF              reduce using rule 9 (statement -> BREAK .)
    PRINT           reduce using rule 9 (statement -> BREAK .)
    INPUT           reduce using rule 9 (statement -> BREAK .)
    ID              reduce using rule 9 (statement -> BREAK .)
    INT             reduce using rule 9 (statement -> BREAK .)
    $end            reduce using rule 9 (statement -> BREAK .)


state 10

    (10) assing -> id . EQUALS expr
    (11) assing -> id . EQUALS callInput
    (12) assing -> id . PLUS PLUS
    (13) assing -> id . MINUS MINUS

    EQUALS          shift and go to state 22
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24


state 11

    (40) statementWhile -> WHILE . condition COLOM statement
    (41) statementWhile -> WHILE . condition COLOM statement break
    (42) statementWhile -> WHILE . condition COLOM statement break statement
    (43) condition -> . comparation
    (44) condition -> . comparation andor condition
    (45) comparation -> . factor compara factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . TEXT
    (27) factor -> . CADENA
    (28) factor -> . group
    (33) group -> . LPARENT expr RPARENT

    NUMBER          shift and go to state 28
    ID              shift and go to state 29
    TEXT            shift and go to state 30
    CADENA          shift and go to state 31
    LPARENT         shift and go to state 33

    condition                      shift and go to state 25
    comparation                    shift and go to state 26
    factor                         shift and go to state 27
    group                          shift and go to state 32

state 12

    (54) statementFor -> FOR . TEXT IN ID COLOM statement
    (55) statementFor -> FOR . TEXT IN form

    TEXT            shift and go to state 34


state 13

    (14) id -> ID .

    EQUALS          reduce using rule 14 (id -> ID .)
    PLUS            reduce using rule 14 (id -> ID .)
    MINUS           reduce using rule 14 (id -> ID .)
    RPARENT         reduce using rule 14 (id -> ID .)


state 14

    (39) statementIf -> IF . condition COLOM statement
    (43) condition -> . comparation
    (44) condition -> . comparation andor condition
    (45) comparation -> . factor compara factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . TEXT
    (27) factor -> . CADENA
    (28) factor -> . group
    (33) group -> . LPARENT expr RPARENT

    NUMBER          shift and go to state 28
    ID              shift and go to state 29
    TEXT            shift and go to state 30
    CADENA          shift and go to state 31
    LPARENT         shift and go to state 33

    condition                      shift and go to state 35
    comparation                    shift and go to state 26
    factor                         shift and go to state 27
    group                          shift and go to state 32

state 15

    (29) callPrint -> PRINT . LPARENT term COMMA ID RPARENT
    (30) callPrint -> PRINT . group
    (31) callPrint -> PRINT . LPARENT RPARENT
    (33) group -> . LPARENT expr RPARENT

    LPARENT         shift and go to state 36

    group                          shift and go to state 37

state 16

    (34) callInput -> INPUT . group
    (33) group -> . LPARENT expr RPARENT

    LPARENT         shift and go to state 33

    group                          shift and go to state 38

state 17

    (35) callInput -> int . LPARENT INPUT group RPARENT

    LPARENT         shift and go to state 39


state 18

    (38) int -> INT .

    LPARENT         reduce using rule 38 (int -> INT .)


state 19

    (2) program -> statement program .

    $end            reduce using rule 2 (program -> statement program .)


state 20

    (32) callPrint -> callPrint statement .

    BREAK           reduce using rule 32 (callPrint -> callPrint statement .)
    WHILE           reduce using rule 32 (callPrint -> callPrint statement .)
    FOR             reduce using rule 32 (callPrint -> callPrint statement .)
    IF              reduce using rule 32 (callPrint -> callPrint statement .)
    PRINT           reduce using rule 32 (callPrint -> callPrint statement .)
    INPUT           reduce using rule 32 (callPrint -> callPrint statement .)
    ID              reduce using rule 32 (callPrint -> callPrint statement .)
    INT             reduce using rule 32 (callPrint -> callPrint statement .)
    $end            reduce using rule 32 (callPrint -> callPrint statement .)


state 21

    (36) callInput -> callInput statement .

    BREAK           reduce using rule 36 (callInput -> callInput statement .)
    WHILE           reduce using rule 36 (callInput -> callInput statement .)
    FOR             reduce using rule 36 (callInput -> callInput statement .)
    IF              reduce using rule 36 (callInput -> callInput statement .)
    PRINT           reduce using rule 36 (callInput -> callInput statement .)
    INPUT           reduce using rule 36 (callInput -> callInput statement .)
    ID              reduce using rule 36 (callInput -> callInput statement .)
    INT             reduce using rule 36 (callInput -> callInput statement .)
    $end            reduce using rule 36 (callInput -> callInput statement .)


state 22

    (10) assing -> id EQUALS . expr
    (11) assing -> id EQUALS . callInput
    (15) expr -> . expr PLUS term
    (16) expr -> . expr MINUS term
    (17) expr -> . term
    (18) expr -> . MINUS expr
    (34) callInput -> . INPUT group
    (35) callInput -> . int LPARENT INPUT group RPARENT
    (36) callInput -> . callInput statement
    (19) term -> . term TIMES factor
    (20) term -> . term POT factor
    (21) term -> . term DIVIDE factor
    (22) term -> . term PERCENT factor
    (23) term -> . factor
    (38) int -> . INT
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . TEXT
    (27) factor -> . CADENA
    (28) factor -> . group
    (33) group -> . LPARENT expr RPARENT

    MINUS           shift and go to state 43
    INPUT           shift and go to state 16
    INT             shift and go to state 18
    NUMBER          shift and go to state 28
    ID              shift and go to state 29
    TEXT            shift and go to state 30
    CADENA          shift and go to state 31
    LPARENT         shift and go to state 33

    expr                           shift and go to state 40
    callInput                      shift and go to state 41
    term                           shift and go to state 42
    group                          shift and go to state 32
    int                            shift and go to state 17
    factor                         shift and go to state 44

state 23

    (12) assing -> id PLUS . PLUS

    PLUS            shift and go to state 45


state 24

    (13) assing -> id MINUS . MINUS

    MINUS           shift and go to state 46


state 25

    (40) statementWhile -> WHILE condition . COLOM statement
    (41) statementWhile -> WHILE condition . COLOM statement break
    (42) statementWhile -> WHILE condition . COLOM statement break statement

    COLOM           shift and go to state 47


state 26

    (43) condition -> comparation .
    (44) condition -> comparation . andor condition
    (52) andor -> . OR
    (53) andor -> . AND

    COLOM           reduce using rule 43 (condition -> comparation .)
    OR              shift and go to state 49
    AND             shift and go to state 50

    andor                          shift and go to state 48

state 27

    (45) comparation -> factor . compara factor
    (46) compara -> . LT
    (47) compara -> . GT
    (48) compara -> . LTE
    (49) compara -> . GTE
    (50) compara -> . COMPARATOR
    (51) compara -> . UNEQUALS

    LT              shift and go to state 52
    GT              shift and go to state 53
    LTE             shift and go to state 54
    GTE             shift and go to state 55
    COMPARATOR      shift and go to state 56
    UNEQUALS        shift and go to state 57

    compara                        shift and go to state 51

state 28

    (24) factor -> NUMBER .

    LT              reduce using rule 24 (factor -> NUMBER .)
    GT              reduce using rule 24 (factor -> NUMBER .)
    LTE             reduce using rule 24 (factor -> NUMBER .)
    GTE             reduce using rule 24 (factor -> NUMBER .)
    COMPARATOR      reduce using rule 24 (factor -> NUMBER .)
    UNEQUALS        reduce using rule 24 (factor -> NUMBER .)
    TIMES           reduce using rule 24 (factor -> NUMBER .)
    POT             reduce using rule 24 (factor -> NUMBER .)
    DIVIDE          reduce using rule 24 (factor -> NUMBER .)
    PERCENT         reduce using rule 24 (factor -> NUMBER .)
    PLUS            reduce using rule 24 (factor -> NUMBER .)
    MINUS           reduce using rule 24 (factor -> NUMBER .)
    BREAK           reduce using rule 24 (factor -> NUMBER .)
    WHILE           reduce using rule 24 (factor -> NUMBER .)
    FOR             reduce using rule 24 (factor -> NUMBER .)
    IF              reduce using rule 24 (factor -> NUMBER .)
    PRINT           reduce using rule 24 (factor -> NUMBER .)
    INPUT           reduce using rule 24 (factor -> NUMBER .)
    ID              reduce using rule 24 (factor -> NUMBER .)
    INT             reduce using rule 24 (factor -> NUMBER .)
    $end            reduce using rule 24 (factor -> NUMBER .)
    RPARENT         reduce using rule 24 (factor -> NUMBER .)
    COMMA           reduce using rule 24 (factor -> NUMBER .)
    OR              reduce using rule 24 (factor -> NUMBER .)
    AND             reduce using rule 24 (factor -> NUMBER .)
    COLOM           reduce using rule 24 (factor -> NUMBER .)


state 29

    (25) factor -> ID .

    LT              reduce using rule 25 (factor -> ID .)
    GT              reduce using rule 25 (factor -> ID .)
    LTE             reduce using rule 25 (factor -> ID .)
    GTE             reduce using rule 25 (factor -> ID .)
    COMPARATOR      reduce using rule 25 (factor -> ID .)
    UNEQUALS        reduce using rule 25 (factor -> ID .)
    TIMES           reduce using rule 25 (factor -> ID .)
    POT             reduce using rule 25 (factor -> ID .)
    DIVIDE          reduce using rule 25 (factor -> ID .)
    PERCENT         reduce using rule 25 (factor -> ID .)
    PLUS            reduce using rule 25 (factor -> ID .)
    MINUS           reduce using rule 25 (factor -> ID .)
    BREAK           reduce using rule 25 (factor -> ID .)
    WHILE           reduce using rule 25 (factor -> ID .)
    FOR             reduce using rule 25 (factor -> ID .)
    IF              reduce using rule 25 (factor -> ID .)
    PRINT           reduce using rule 25 (factor -> ID .)
    INPUT           reduce using rule 25 (factor -> ID .)
    ID              reduce using rule 25 (factor -> ID .)
    INT             reduce using rule 25 (factor -> ID .)
    $end            reduce using rule 25 (factor -> ID .)
    RPARENT         reduce using rule 25 (factor -> ID .)
    COMMA           reduce using rule 25 (factor -> ID .)
    OR              reduce using rule 25 (factor -> ID .)
    AND             reduce using rule 25 (factor -> ID .)
    COLOM           reduce using rule 25 (factor -> ID .)


state 30

    (26) factor -> TEXT .

    LT              reduce using rule 26 (factor -> TEXT .)
    GT              reduce using rule 26 (factor -> TEXT .)
    LTE             reduce using rule 26 (factor -> TEXT .)
    GTE             reduce using rule 26 (factor -> TEXT .)
    COMPARATOR      reduce using rule 26 (factor -> TEXT .)
    UNEQUALS        reduce using rule 26 (factor -> TEXT .)
    TIMES           reduce using rule 26 (factor -> TEXT .)
    POT             reduce using rule 26 (factor -> TEXT .)
    DIVIDE          reduce using rule 26 (factor -> TEXT .)
    PERCENT         reduce using rule 26 (factor -> TEXT .)
    PLUS            reduce using rule 26 (factor -> TEXT .)
    MINUS           reduce using rule 26 (factor -> TEXT .)
    BREAK           reduce using rule 26 (factor -> TEXT .)
    WHILE           reduce using rule 26 (factor -> TEXT .)
    FOR             reduce using rule 26 (factor -> TEXT .)
    IF              reduce using rule 26 (factor -> TEXT .)
    PRINT           reduce using rule 26 (factor -> TEXT .)
    INPUT           reduce using rule 26 (factor -> TEXT .)
    ID              reduce using rule 26 (factor -> TEXT .)
    INT             reduce using rule 26 (factor -> TEXT .)
    $end            reduce using rule 26 (factor -> TEXT .)
    RPARENT         reduce using rule 26 (factor -> TEXT .)
    COMMA           reduce using rule 26 (factor -> TEXT .)
    OR              reduce using rule 26 (factor -> TEXT .)
    AND             reduce using rule 26 (factor -> TEXT .)
    COLOM           reduce using rule 26 (factor -> TEXT .)


state 31

    (27) factor -> CADENA .

    LT              reduce using rule 27 (factor -> CADENA .)
    GT              reduce using rule 27 (factor -> CADENA .)
    LTE             reduce using rule 27 (factor -> CADENA .)
    GTE             reduce using rule 27 (factor -> CADENA .)
    COMPARATOR      reduce using rule 27 (factor -> CADENA .)
    UNEQUALS        reduce using rule 27 (factor -> CADENA .)
    TIMES           reduce using rule 27 (factor -> CADENA .)
    POT             reduce using rule 27 (factor -> CADENA .)
    DIVIDE          reduce using rule 27 (factor -> CADENA .)
    PERCENT         reduce using rule 27 (factor -> CADENA .)
    PLUS            reduce using rule 27 (factor -> CADENA .)
    MINUS           reduce using rule 27 (factor -> CADENA .)
    BREAK           reduce using rule 27 (factor -> CADENA .)
    WHILE           reduce using rule 27 (factor -> CADENA .)
    FOR             reduce using rule 27 (factor -> CADENA .)
    IF              reduce using rule 27 (factor -> CADENA .)
    PRINT           reduce using rule 27 (factor -> CADENA .)
    INPUT           reduce using rule 27 (factor -> CADENA .)
    ID              reduce using rule 27 (factor -> CADENA .)
    INT             reduce using rule 27 (factor -> CADENA .)
    $end            reduce using rule 27 (factor -> CADENA .)
    RPARENT         reduce using rule 27 (factor -> CADENA .)
    COMMA           reduce using rule 27 (factor -> CADENA .)
    OR              reduce using rule 27 (factor -> CADENA .)
    AND             reduce using rule 27 (factor -> CADENA .)
    COLOM           reduce using rule 27 (factor -> CADENA .)


state 32

    (28) factor -> group .

    LT              reduce using rule 28 (factor -> group .)
    GT              reduce using rule 28 (factor -> group .)
    LTE             reduce using rule 28 (factor -> group .)
    GTE             reduce using rule 28 (factor -> group .)
    COMPARATOR      reduce using rule 28 (factor -> group .)
    UNEQUALS        reduce using rule 28 (factor -> group .)
    TIMES           reduce using rule 28 (factor -> group .)
    POT             reduce using rule 28 (factor -> group .)
    DIVIDE          reduce using rule 28 (factor -> group .)
    PERCENT         reduce using rule 28 (factor -> group .)
    PLUS            reduce using rule 28 (factor -> group .)
    MINUS           reduce using rule 28 (factor -> group .)
    BREAK           reduce using rule 28 (factor -> group .)
    WHILE           reduce using rule 28 (factor -> group .)
    FOR             reduce using rule 28 (factor -> group .)
    IF              reduce using rule 28 (factor -> group .)
    PRINT           reduce using rule 28 (factor -> group .)
    INPUT           reduce using rule 28 (factor -> group .)
    ID              reduce using rule 28 (factor -> group .)
    INT             reduce using rule 28 (factor -> group .)
    $end            reduce using rule 28 (factor -> group .)
    RPARENT         reduce using rule 28 (factor -> group .)
    COMMA           reduce using rule 28 (factor -> group .)
    OR              reduce using rule 28 (factor -> group .)
    AND             reduce using rule 28 (factor -> group .)
    COLOM           reduce using rule 28 (factor -> group .)


state 33

    (33) group -> LPARENT . expr RPARENT
    (15) expr -> . expr PLUS term
    (16) expr -> . expr MINUS term
    (17) expr -> . term
    (18) expr -> . MINUS expr
    (19) term -> . term TIMES factor
    (20) term -> . term POT factor
    (21) term -> . term DIVIDE factor
    (22) term -> . term PERCENT factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . TEXT
    (27) factor -> . CADENA
    (28) factor -> . group
    (33) group -> . LPARENT expr RPARENT

    MINUS           shift and go to state 43
    NUMBER          shift and go to state 28
    ID              shift and go to state 29
    TEXT            shift and go to state 30
    CADENA          shift and go to state 31
    LPARENT         shift and go to state 33

    expr                           shift and go to state 58
    term                           shift and go to state 42
    factor                         shift and go to state 44
    group                          shift and go to state 32

state 34

    (54) statementFor -> FOR TEXT . IN ID COLOM statement
    (55) statementFor -> FOR TEXT . IN form

    IN              shift and go to state 59


state 35

    (39) statementIf -> IF condition . COLOM statement

    COLOM           shift and go to state 60


state 36

    (29) callPrint -> PRINT LPARENT . term COMMA ID RPARENT
    (31) callPrint -> PRINT LPARENT . RPARENT
    (33) group -> LPARENT . expr RPARENT
    (19) term -> . term TIMES factor
    (20) term -> . term POT factor
    (21) term -> . term DIVIDE factor
    (22) term -> . term PERCENT factor
    (23) term -> . factor
    (15) expr -> . expr PLUS term
    (16) expr -> . expr MINUS term
    (17) expr -> . term
    (18) expr -> . MINUS expr
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . TEXT
    (27) factor -> . CADENA
    (28) factor -> . group
    (33) group -> . LPARENT expr RPARENT

    RPARENT         shift and go to state 62
    MINUS           shift and go to state 43
    NUMBER          shift and go to state 28
    ID              shift and go to state 29
    TEXT            shift and go to state 30
    CADENA          shift and go to state 31
    LPARENT         shift and go to state 33

    term                           shift and go to state 61
    expr                           shift and go to state 58
    factor                         shift and go to state 44
    group                          shift and go to state 32

state 37

    (30) callPrint -> PRINT group .

    BREAK           reduce using rule 30 (callPrint -> PRINT group .)
    WHILE           reduce using rule 30 (callPrint -> PRINT group .)
    FOR             reduce using rule 30 (callPrint -> PRINT group .)
    IF              reduce using rule 30 (callPrint -> PRINT group .)
    PRINT           reduce using rule 30 (callPrint -> PRINT group .)
    INPUT           reduce using rule 30 (callPrint -> PRINT group .)
    ID              reduce using rule 30 (callPrint -> PRINT group .)
    INT             reduce using rule 30 (callPrint -> PRINT group .)
    $end            reduce using rule 30 (callPrint -> PRINT group .)


state 38

    (34) callInput -> INPUT group .

    BREAK           reduce using rule 34 (callInput -> INPUT group .)
    WHILE           reduce using rule 34 (callInput -> INPUT group .)
    FOR             reduce using rule 34 (callInput -> INPUT group .)
    IF              reduce using rule 34 (callInput -> INPUT group .)
    PRINT           reduce using rule 34 (callInput -> INPUT group .)
    INPUT           reduce using rule 34 (callInput -> INPUT group .)
    ID              reduce using rule 34 (callInput -> INPUT group .)
    INT             reduce using rule 34 (callInput -> INPUT group .)
    $end            reduce using rule 34 (callInput -> INPUT group .)


state 39

    (35) callInput -> int LPARENT . INPUT group RPARENT

    INPUT           shift and go to state 63


state 40

    (10) assing -> id EQUALS expr .
    (15) expr -> expr . PLUS term
    (16) expr -> expr . MINUS term

    BREAK           reduce using rule 10 (assing -> id EQUALS expr .)
    WHILE           reduce using rule 10 (assing -> id EQUALS expr .)
    FOR             reduce using rule 10 (assing -> id EQUALS expr .)
    IF              reduce using rule 10 (assing -> id EQUALS expr .)
    PRINT           reduce using rule 10 (assing -> id EQUALS expr .)
    INPUT           reduce using rule 10 (assing -> id EQUALS expr .)
    ID              reduce using rule 10 (assing -> id EQUALS expr .)
    INT             reduce using rule 10 (assing -> id EQUALS expr .)
    $end            reduce using rule 10 (assing -> id EQUALS expr .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65


state 41

    (11) assing -> id EQUALS callInput .
    (36) callInput -> callInput . statement
    (3) statement -> . assing
    (4) statement -> . statementWhile
    (5) statement -> . statementFor
    (6) statement -> . statementIf
    (7) statement -> . callPrint
    (8) statement -> . callInput
    (9) statement -> . BREAK
    (10) assing -> . id EQUALS expr
    (11) assing -> . id EQUALS callInput
    (12) assing -> . id PLUS PLUS
    (13) assing -> . id MINUS MINUS
    (40) statementWhile -> . WHILE condition COLOM statement
    (41) statementWhile -> . WHILE condition COLOM statement break
    (42) statementWhile -> . WHILE condition COLOM statement break statement
    (54) statementFor -> . FOR TEXT IN ID COLOM statement
    (55) statementFor -> . FOR TEXT IN form
    (39) statementIf -> . IF condition COLOM statement
    (29) callPrint -> . PRINT LPARENT term COMMA ID RPARENT
    (30) callPrint -> . PRINT group
    (31) callPrint -> . PRINT LPARENT RPARENT
    (32) callPrint -> . callPrint statement
    (34) callInput -> . INPUT group
    (35) callInput -> . int LPARENT INPUT group RPARENT
    (36) callInput -> . callInput statement
    (14) id -> . ID
    (38) int -> . INT

  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    $end            reduce using rule 11 (assing -> id EQUALS callInput .)
    BREAK           shift and go to state 9
    WHILE           shift and go to state 11
    FOR             shift and go to state 12
    IF              shift and go to state 14
    PRINT           shift and go to state 15
    INPUT           shift and go to state 16
    ID              shift and go to state 13
    INT             shift and go to state 18

  ! BREAK           [ reduce using rule 11 (assing -> id EQUALS callInput .) ]
  ! WHILE           [ reduce using rule 11 (assing -> id EQUALS callInput .) ]
  ! FOR             [ reduce using rule 11 (assing -> id EQUALS callInput .) ]
  ! IF              [ reduce using rule 11 (assing -> id EQUALS callInput .) ]
  ! PRINT           [ reduce using rule 11 (assing -> id EQUALS callInput .) ]
  ! INPUT           [ reduce using rule 11 (assing -> id EQUALS callInput .) ]
  ! ID              [ reduce using rule 11 (assing -> id EQUALS callInput .) ]
  ! INT             [ reduce using rule 11 (assing -> id EQUALS callInput .) ]

    id                             shift and go to state 10
    callInput                      shift and go to state 8
    statement                      shift and go to state 21
    assing                         shift and go to state 3
    statementWhile                 shift and go to state 4
    statementFor                   shift and go to state 5
    statementIf                    shift and go to state 6
    callPrint                      shift and go to state 7
    int                            shift and go to state 17

state 42

    (17) expr -> term .
    (19) term -> term . TIMES factor
    (20) term -> term . POT factor
    (21) term -> term . DIVIDE factor
    (22) term -> term . PERCENT factor

    PLUS            reduce using rule 17 (expr -> term .)
    MINUS           reduce using rule 17 (expr -> term .)
    BREAK           reduce using rule 17 (expr -> term .)
    WHILE           reduce using rule 17 (expr -> term .)
    FOR             reduce using rule 17 (expr -> term .)
    IF              reduce using rule 17 (expr -> term .)
    PRINT           reduce using rule 17 (expr -> term .)
    INPUT           reduce using rule 17 (expr -> term .)
    ID              reduce using rule 17 (expr -> term .)
    INT             reduce using rule 17 (expr -> term .)
    $end            reduce using rule 17 (expr -> term .)
    RPARENT         reduce using rule 17 (expr -> term .)
    TIMES           shift and go to state 66
    POT             shift and go to state 67
    DIVIDE          shift and go to state 68
    PERCENT         shift and go to state 69


state 43

    (18) expr -> MINUS . expr
    (15) expr -> . expr PLUS term
    (16) expr -> . expr MINUS term
    (17) expr -> . term
    (18) expr -> . MINUS expr
    (19) term -> . term TIMES factor
    (20) term -> . term POT factor
    (21) term -> . term DIVIDE factor
    (22) term -> . term PERCENT factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . TEXT
    (27) factor -> . CADENA
    (28) factor -> . group
    (33) group -> . LPARENT expr RPARENT

    MINUS           shift and go to state 43
    NUMBER          shift and go to state 28
    ID              shift and go to state 29
    TEXT            shift and go to state 30
    CADENA          shift and go to state 31
    LPARENT         shift and go to state 33

    expr                           shift and go to state 70
    term                           shift and go to state 42
    factor                         shift and go to state 44
    group                          shift and go to state 32

state 44

    (23) term -> factor .

    TIMES           reduce using rule 23 (term -> factor .)
    POT             reduce using rule 23 (term -> factor .)
    DIVIDE          reduce using rule 23 (term -> factor .)
    PERCENT         reduce using rule 23 (term -> factor .)
    PLUS            reduce using rule 23 (term -> factor .)
    MINUS           reduce using rule 23 (term -> factor .)
    BREAK           reduce using rule 23 (term -> factor .)
    WHILE           reduce using rule 23 (term -> factor .)
    FOR             reduce using rule 23 (term -> factor .)
    IF              reduce using rule 23 (term -> factor .)
    PRINT           reduce using rule 23 (term -> factor .)
    INPUT           reduce using rule 23 (term -> factor .)
    ID              reduce using rule 23 (term -> factor .)
    INT             reduce using rule 23 (term -> factor .)
    $end            reduce using rule 23 (term -> factor .)
    RPARENT         reduce using rule 23 (term -> factor .)
    COMMA           reduce using rule 23 (term -> factor .)


state 45

    (12) assing -> id PLUS PLUS .

    BREAK           reduce using rule 12 (assing -> id PLUS PLUS .)
    WHILE           reduce using rule 12 (assing -> id PLUS PLUS .)
    FOR             reduce using rule 12 (assing -> id PLUS PLUS .)
    IF              reduce using rule 12 (assing -> id PLUS PLUS .)
    PRINT           reduce using rule 12 (assing -> id PLUS PLUS .)
    INPUT           reduce using rule 12 (assing -> id PLUS PLUS .)
    ID              reduce using rule 12 (assing -> id PLUS PLUS .)
    INT             reduce using rule 12 (assing -> id PLUS PLUS .)
    $end            reduce using rule 12 (assing -> id PLUS PLUS .)


state 46

    (13) assing -> id MINUS MINUS .

    BREAK           reduce using rule 13 (assing -> id MINUS MINUS .)
    WHILE           reduce using rule 13 (assing -> id MINUS MINUS .)
    FOR             reduce using rule 13 (assing -> id MINUS MINUS .)
    IF              reduce using rule 13 (assing -> id MINUS MINUS .)
    PRINT           reduce using rule 13 (assing -> id MINUS MINUS .)
    INPUT           reduce using rule 13 (assing -> id MINUS MINUS .)
    ID              reduce using rule 13 (assing -> id MINUS MINUS .)
    INT             reduce using rule 13 (assing -> id MINUS MINUS .)
    $end            reduce using rule 13 (assing -> id MINUS MINUS .)


state 47

    (40) statementWhile -> WHILE condition COLOM . statement
    (41) statementWhile -> WHILE condition COLOM . statement break
    (42) statementWhile -> WHILE condition COLOM . statement break statement
    (3) statement -> . assing
    (4) statement -> . statementWhile
    (5) statement -> . statementFor
    (6) statement -> . statementIf
    (7) statement -> . callPrint
    (8) statement -> . callInput
    (9) statement -> . BREAK
    (10) assing -> . id EQUALS expr
    (11) assing -> . id EQUALS callInput
    (12) assing -> . id PLUS PLUS
    (13) assing -> . id MINUS MINUS
    (40) statementWhile -> . WHILE condition COLOM statement
    (41) statementWhile -> . WHILE condition COLOM statement break
    (42) statementWhile -> . WHILE condition COLOM statement break statement
    (54) statementFor -> . FOR TEXT IN ID COLOM statement
    (55) statementFor -> . FOR TEXT IN form
    (39) statementIf -> . IF condition COLOM statement
    (29) callPrint -> . PRINT LPARENT term COMMA ID RPARENT
    (30) callPrint -> . PRINT group
    (31) callPrint -> . PRINT LPARENT RPARENT
    (32) callPrint -> . callPrint statement
    (34) callInput -> . INPUT group
    (35) callInput -> . int LPARENT INPUT group RPARENT
    (36) callInput -> . callInput statement
    (14) id -> . ID
    (38) int -> . INT

    BREAK           shift and go to state 9
    WHILE           shift and go to state 11
    FOR             shift and go to state 12
    IF              shift and go to state 14
    PRINT           shift and go to state 15
    INPUT           shift and go to state 16
    ID              shift and go to state 13
    INT             shift and go to state 18

    statement                      shift and go to state 71
    assing                         shift and go to state 3
    statementWhile                 shift and go to state 4
    statementFor                   shift and go to state 5
    statementIf                    shift and go to state 6
    callPrint                      shift and go to state 7
    callInput                      shift and go to state 8
    id                             shift and go to state 10
    int                            shift and go to state 17

state 48

    (44) condition -> comparation andor . condition
    (43) condition -> . comparation
    (44) condition -> . comparation andor condition
    (45) comparation -> . factor compara factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . TEXT
    (27) factor -> . CADENA
    (28) factor -> . group
    (33) group -> . LPARENT expr RPARENT

    NUMBER          shift and go to state 28
    ID              shift and go to state 29
    TEXT            shift and go to state 30
    CADENA          shift and go to state 31
    LPARENT         shift and go to state 33

    comparation                    shift and go to state 26
    condition                      shift and go to state 72
    factor                         shift and go to state 27
    group                          shift and go to state 32

state 49

    (52) andor -> OR .

    NUMBER          reduce using rule 52 (andor -> OR .)
    ID              reduce using rule 52 (andor -> OR .)
    TEXT            reduce using rule 52 (andor -> OR .)
    CADENA          reduce using rule 52 (andor -> OR .)
    LPARENT         reduce using rule 52 (andor -> OR .)


state 50

    (53) andor -> AND .

    NUMBER          reduce using rule 53 (andor -> AND .)
    ID              reduce using rule 53 (andor -> AND .)
    TEXT            reduce using rule 53 (andor -> AND .)
    CADENA          reduce using rule 53 (andor -> AND .)
    LPARENT         reduce using rule 53 (andor -> AND .)


state 51

    (45) comparation -> factor compara . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . TEXT
    (27) factor -> . CADENA
    (28) factor -> . group
    (33) group -> . LPARENT expr RPARENT

    NUMBER          shift and go to state 28
    ID              shift and go to state 29
    TEXT            shift and go to state 30
    CADENA          shift and go to state 31
    LPARENT         shift and go to state 33

    factor                         shift and go to state 73
    group                          shift and go to state 32

state 52

    (46) compara -> LT .

    NUMBER          reduce using rule 46 (compara -> LT .)
    ID              reduce using rule 46 (compara -> LT .)
    TEXT            reduce using rule 46 (compara -> LT .)
    CADENA          reduce using rule 46 (compara -> LT .)
    LPARENT         reduce using rule 46 (compara -> LT .)


state 53

    (47) compara -> GT .

    NUMBER          reduce using rule 47 (compara -> GT .)
    ID              reduce using rule 47 (compara -> GT .)
    TEXT            reduce using rule 47 (compara -> GT .)
    CADENA          reduce using rule 47 (compara -> GT .)
    LPARENT         reduce using rule 47 (compara -> GT .)


state 54

    (48) compara -> LTE .

    NUMBER          reduce using rule 48 (compara -> LTE .)
    ID              reduce using rule 48 (compara -> LTE .)
    TEXT            reduce using rule 48 (compara -> LTE .)
    CADENA          reduce using rule 48 (compara -> LTE .)
    LPARENT         reduce using rule 48 (compara -> LTE .)


state 55

    (49) compara -> GTE .

    NUMBER          reduce using rule 49 (compara -> GTE .)
    ID              reduce using rule 49 (compara -> GTE .)
    TEXT            reduce using rule 49 (compara -> GTE .)
    CADENA          reduce using rule 49 (compara -> GTE .)
    LPARENT         reduce using rule 49 (compara -> GTE .)


state 56

    (50) compara -> COMPARATOR .

    NUMBER          reduce using rule 50 (compara -> COMPARATOR .)
    ID              reduce using rule 50 (compara -> COMPARATOR .)
    TEXT            reduce using rule 50 (compara -> COMPARATOR .)
    CADENA          reduce using rule 50 (compara -> COMPARATOR .)
    LPARENT         reduce using rule 50 (compara -> COMPARATOR .)


state 57

    (51) compara -> UNEQUALS .

    NUMBER          reduce using rule 51 (compara -> UNEQUALS .)
    ID              reduce using rule 51 (compara -> UNEQUALS .)
    TEXT            reduce using rule 51 (compara -> UNEQUALS .)
    CADENA          reduce using rule 51 (compara -> UNEQUALS .)
    LPARENT         reduce using rule 51 (compara -> UNEQUALS .)


state 58

    (33) group -> LPARENT expr . RPARENT
    (15) expr -> expr . PLUS term
    (16) expr -> expr . MINUS term

    RPARENT         shift and go to state 74
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65


state 59

    (54) statementFor -> FOR TEXT IN . ID COLOM statement
    (55) statementFor -> FOR TEXT IN . form
    (56) form -> . RANGE LPARENT NUMBER RPARENT COLOM statement
    (57) form -> . RANGE LPARENT ID RPARENT COLOM
    (58) form -> . RANGE LPARENT LEN LPARENT id RPARENT RPARENT COLOM statement

    ID              shift and go to state 75
    RANGE           shift and go to state 77

    form                           shift and go to state 76

state 60

    (39) statementIf -> IF condition COLOM . statement
    (3) statement -> . assing
    (4) statement -> . statementWhile
    (5) statement -> . statementFor
    (6) statement -> . statementIf
    (7) statement -> . callPrint
    (8) statement -> . callInput
    (9) statement -> . BREAK
    (10) assing -> . id EQUALS expr
    (11) assing -> . id EQUALS callInput
    (12) assing -> . id PLUS PLUS
    (13) assing -> . id MINUS MINUS
    (40) statementWhile -> . WHILE condition COLOM statement
    (41) statementWhile -> . WHILE condition COLOM statement break
    (42) statementWhile -> . WHILE condition COLOM statement break statement
    (54) statementFor -> . FOR TEXT IN ID COLOM statement
    (55) statementFor -> . FOR TEXT IN form
    (39) statementIf -> . IF condition COLOM statement
    (29) callPrint -> . PRINT LPARENT term COMMA ID RPARENT
    (30) callPrint -> . PRINT group
    (31) callPrint -> . PRINT LPARENT RPARENT
    (32) callPrint -> . callPrint statement
    (34) callInput -> . INPUT group
    (35) callInput -> . int LPARENT INPUT group RPARENT
    (36) callInput -> . callInput statement
    (14) id -> . ID
    (38) int -> . INT

    BREAK           shift and go to state 9
    WHILE           shift and go to state 11
    FOR             shift and go to state 12
    IF              shift and go to state 14
    PRINT           shift and go to state 15
    INPUT           shift and go to state 16
    ID              shift and go to state 13
    INT             shift and go to state 18

    statement                      shift and go to state 78
    assing                         shift and go to state 3
    statementWhile                 shift and go to state 4
    statementFor                   shift and go to state 5
    statementIf                    shift and go to state 6
    callPrint                      shift and go to state 7
    callInput                      shift and go to state 8
    id                             shift and go to state 10
    int                            shift and go to state 17

state 61

    (29) callPrint -> PRINT LPARENT term . COMMA ID RPARENT
    (19) term -> term . TIMES factor
    (20) term -> term . POT factor
    (21) term -> term . DIVIDE factor
    (22) term -> term . PERCENT factor
    (17) expr -> term .

    COMMA           shift and go to state 79
    TIMES           shift and go to state 66
    POT             shift and go to state 67
    DIVIDE          shift and go to state 68
    PERCENT         shift and go to state 69
    RPARENT         reduce using rule 17 (expr -> term .)
    PLUS            reduce using rule 17 (expr -> term .)
    MINUS           reduce using rule 17 (expr -> term .)


state 62

    (31) callPrint -> PRINT LPARENT RPARENT .

    BREAK           reduce using rule 31 (callPrint -> PRINT LPARENT RPARENT .)
    WHILE           reduce using rule 31 (callPrint -> PRINT LPARENT RPARENT .)
    FOR             reduce using rule 31 (callPrint -> PRINT LPARENT RPARENT .)
    IF              reduce using rule 31 (callPrint -> PRINT LPARENT RPARENT .)
    PRINT           reduce using rule 31 (callPrint -> PRINT LPARENT RPARENT .)
    INPUT           reduce using rule 31 (callPrint -> PRINT LPARENT RPARENT .)
    ID              reduce using rule 31 (callPrint -> PRINT LPARENT RPARENT .)
    INT             reduce using rule 31 (callPrint -> PRINT LPARENT RPARENT .)
    $end            reduce using rule 31 (callPrint -> PRINT LPARENT RPARENT .)


state 63

    (35) callInput -> int LPARENT INPUT . group RPARENT
    (33) group -> . LPARENT expr RPARENT

    LPARENT         shift and go to state 33

    group                          shift and go to state 80

state 64

    (15) expr -> expr PLUS . term
    (19) term -> . term TIMES factor
    (20) term -> . term POT factor
    (21) term -> . term DIVIDE factor
    (22) term -> . term PERCENT factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . TEXT
    (27) factor -> . CADENA
    (28) factor -> . group
    (33) group -> . LPARENT expr RPARENT

    NUMBER          shift and go to state 28
    ID              shift and go to state 29
    TEXT            shift and go to state 30
    CADENA          shift and go to state 31
    LPARENT         shift and go to state 33

    term                           shift and go to state 81
    factor                         shift and go to state 44
    group                          shift and go to state 32

state 65

    (16) expr -> expr MINUS . term
    (19) term -> . term TIMES factor
    (20) term -> . term POT factor
    (21) term -> . term DIVIDE factor
    (22) term -> . term PERCENT factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . TEXT
    (27) factor -> . CADENA
    (28) factor -> . group
    (33) group -> . LPARENT expr RPARENT

    NUMBER          shift and go to state 28
    ID              shift and go to state 29
    TEXT            shift and go to state 30
    CADENA          shift and go to state 31
    LPARENT         shift and go to state 33

    term                           shift and go to state 82
    factor                         shift and go to state 44
    group                          shift and go to state 32

state 66

    (19) term -> term TIMES . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . TEXT
    (27) factor -> . CADENA
    (28) factor -> . group
    (33) group -> . LPARENT expr RPARENT

    NUMBER          shift and go to state 28
    ID              shift and go to state 29
    TEXT            shift and go to state 30
    CADENA          shift and go to state 31
    LPARENT         shift and go to state 33

    factor                         shift and go to state 83
    group                          shift and go to state 32

state 67

    (20) term -> term POT . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . TEXT
    (27) factor -> . CADENA
    (28) factor -> . group
    (33) group -> . LPARENT expr RPARENT

    NUMBER          shift and go to state 28
    ID              shift and go to state 29
    TEXT            shift and go to state 30
    CADENA          shift and go to state 31
    LPARENT         shift and go to state 33

    factor                         shift and go to state 84
    group                          shift and go to state 32

state 68

    (21) term -> term DIVIDE . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . TEXT
    (27) factor -> . CADENA
    (28) factor -> . group
    (33) group -> . LPARENT expr RPARENT

    NUMBER          shift and go to state 28
    ID              shift and go to state 29
    TEXT            shift and go to state 30
    CADENA          shift and go to state 31
    LPARENT         shift and go to state 33

    factor                         shift and go to state 85
    group                          shift and go to state 32

state 69

    (22) term -> term PERCENT . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . TEXT
    (27) factor -> . CADENA
    (28) factor -> . group
    (33) group -> . LPARENT expr RPARENT

    NUMBER          shift and go to state 28
    ID              shift and go to state 29
    TEXT            shift and go to state 30
    CADENA          shift and go to state 31
    LPARENT         shift and go to state 33

    factor                         shift and go to state 86
    group                          shift and go to state 32

state 70

    (18) expr -> MINUS expr .
    (15) expr -> expr . PLUS term
    (16) expr -> expr . MINUS term

    PLUS            reduce using rule 18 (expr -> MINUS expr .)
    MINUS           reduce using rule 18 (expr -> MINUS expr .)
    BREAK           reduce using rule 18 (expr -> MINUS expr .)
    WHILE           reduce using rule 18 (expr -> MINUS expr .)
    FOR             reduce using rule 18 (expr -> MINUS expr .)
    IF              reduce using rule 18 (expr -> MINUS expr .)
    PRINT           reduce using rule 18 (expr -> MINUS expr .)
    INPUT           reduce using rule 18 (expr -> MINUS expr .)
    ID              reduce using rule 18 (expr -> MINUS expr .)
    INT             reduce using rule 18 (expr -> MINUS expr .)
    $end            reduce using rule 18 (expr -> MINUS expr .)
    RPARENT         reduce using rule 18 (expr -> MINUS expr .)

  ! PLUS            [ shift and go to state 64 ]
  ! MINUS           [ shift and go to state 65 ]


state 71

    (40) statementWhile -> WHILE condition COLOM statement .
    (41) statementWhile -> WHILE condition COLOM statement . break
    (42) statementWhile -> WHILE condition COLOM statement . break statement
    (37) break -> . BREAK

  ! shift/reduce conflict for BREAK resolved as shift
    WHILE           reduce using rule 40 (statementWhile -> WHILE condition COLOM statement .)
    FOR             reduce using rule 40 (statementWhile -> WHILE condition COLOM statement .)
    IF              reduce using rule 40 (statementWhile -> WHILE condition COLOM statement .)
    PRINT           reduce using rule 40 (statementWhile -> WHILE condition COLOM statement .)
    INPUT           reduce using rule 40 (statementWhile -> WHILE condition COLOM statement .)
    ID              reduce using rule 40 (statementWhile -> WHILE condition COLOM statement .)
    INT             reduce using rule 40 (statementWhile -> WHILE condition COLOM statement .)
    $end            reduce using rule 40 (statementWhile -> WHILE condition COLOM statement .)
    BREAK           shift and go to state 88

  ! BREAK           [ reduce using rule 40 (statementWhile -> WHILE condition COLOM statement .) ]

    break                          shift and go to state 87

state 72

    (44) condition -> comparation andor condition .

    COLOM           reduce using rule 44 (condition -> comparation andor condition .)


state 73

    (45) comparation -> factor compara factor .

    OR              reduce using rule 45 (comparation -> factor compara factor .)
    AND             reduce using rule 45 (comparation -> factor compara factor .)
    COLOM           reduce using rule 45 (comparation -> factor compara factor .)


state 74

    (33) group -> LPARENT expr RPARENT .

    LT              reduce using rule 33 (group -> LPARENT expr RPARENT .)
    GT              reduce using rule 33 (group -> LPARENT expr RPARENT .)
    LTE             reduce using rule 33 (group -> LPARENT expr RPARENT .)
    GTE             reduce using rule 33 (group -> LPARENT expr RPARENT .)
    COMPARATOR      reduce using rule 33 (group -> LPARENT expr RPARENT .)
    UNEQUALS        reduce using rule 33 (group -> LPARENT expr RPARENT .)
    BREAK           reduce using rule 33 (group -> LPARENT expr RPARENT .)
    WHILE           reduce using rule 33 (group -> LPARENT expr RPARENT .)
    FOR             reduce using rule 33 (group -> LPARENT expr RPARENT .)
    IF              reduce using rule 33 (group -> LPARENT expr RPARENT .)
    PRINT           reduce using rule 33 (group -> LPARENT expr RPARENT .)
    INPUT           reduce using rule 33 (group -> LPARENT expr RPARENT .)
    ID              reduce using rule 33 (group -> LPARENT expr RPARENT .)
    INT             reduce using rule 33 (group -> LPARENT expr RPARENT .)
    $end            reduce using rule 33 (group -> LPARENT expr RPARENT .)
    TIMES           reduce using rule 33 (group -> LPARENT expr RPARENT .)
    POT             reduce using rule 33 (group -> LPARENT expr RPARENT .)
    DIVIDE          reduce using rule 33 (group -> LPARENT expr RPARENT .)
    PERCENT         reduce using rule 33 (group -> LPARENT expr RPARENT .)
    PLUS            reduce using rule 33 (group -> LPARENT expr RPARENT .)
    MINUS           reduce using rule 33 (group -> LPARENT expr RPARENT .)
    RPARENT         reduce using rule 33 (group -> LPARENT expr RPARENT .)
    COMMA           reduce using rule 33 (group -> LPARENT expr RPARENT .)
    OR              reduce using rule 33 (group -> LPARENT expr RPARENT .)
    AND             reduce using rule 33 (group -> LPARENT expr RPARENT .)
    COLOM           reduce using rule 33 (group -> LPARENT expr RPARENT .)


state 75

    (54) statementFor -> FOR TEXT IN ID . COLOM statement

    COLOM           shift and go to state 89


state 76

    (55) statementFor -> FOR TEXT IN form .

    BREAK           reduce using rule 55 (statementFor -> FOR TEXT IN form .)
    WHILE           reduce using rule 55 (statementFor -> FOR TEXT IN form .)
    FOR             reduce using rule 55 (statementFor -> FOR TEXT IN form .)
    IF              reduce using rule 55 (statementFor -> FOR TEXT IN form .)
    PRINT           reduce using rule 55 (statementFor -> FOR TEXT IN form .)
    INPUT           reduce using rule 55 (statementFor -> FOR TEXT IN form .)
    ID              reduce using rule 55 (statementFor -> FOR TEXT IN form .)
    INT             reduce using rule 55 (statementFor -> FOR TEXT IN form .)
    $end            reduce using rule 55 (statementFor -> FOR TEXT IN form .)


state 77

    (56) form -> RANGE . LPARENT NUMBER RPARENT COLOM statement
    (57) form -> RANGE . LPARENT ID RPARENT COLOM
    (58) form -> RANGE . LPARENT LEN LPARENT id RPARENT RPARENT COLOM statement

    LPARENT         shift and go to state 90


state 78

    (39) statementIf -> IF condition COLOM statement .

    BREAK           reduce using rule 39 (statementIf -> IF condition COLOM statement .)
    WHILE           reduce using rule 39 (statementIf -> IF condition COLOM statement .)
    FOR             reduce using rule 39 (statementIf -> IF condition COLOM statement .)
    IF              reduce using rule 39 (statementIf -> IF condition COLOM statement .)
    PRINT           reduce using rule 39 (statementIf -> IF condition COLOM statement .)
    INPUT           reduce using rule 39 (statementIf -> IF condition COLOM statement .)
    ID              reduce using rule 39 (statementIf -> IF condition COLOM statement .)
    INT             reduce using rule 39 (statementIf -> IF condition COLOM statement .)
    $end            reduce using rule 39 (statementIf -> IF condition COLOM statement .)


state 79

    (29) callPrint -> PRINT LPARENT term COMMA . ID RPARENT

    ID              shift and go to state 91


state 80

    (35) callInput -> int LPARENT INPUT group . RPARENT

    RPARENT         shift and go to state 92


state 81

    (15) expr -> expr PLUS term .
    (19) term -> term . TIMES factor
    (20) term -> term . POT factor
    (21) term -> term . DIVIDE factor
    (22) term -> term . PERCENT factor

    PLUS            reduce using rule 15 (expr -> expr PLUS term .)
    MINUS           reduce using rule 15 (expr -> expr PLUS term .)
    BREAK           reduce using rule 15 (expr -> expr PLUS term .)
    WHILE           reduce using rule 15 (expr -> expr PLUS term .)
    FOR             reduce using rule 15 (expr -> expr PLUS term .)
    IF              reduce using rule 15 (expr -> expr PLUS term .)
    PRINT           reduce using rule 15 (expr -> expr PLUS term .)
    INPUT           reduce using rule 15 (expr -> expr PLUS term .)
    ID              reduce using rule 15 (expr -> expr PLUS term .)
    INT             reduce using rule 15 (expr -> expr PLUS term .)
    $end            reduce using rule 15 (expr -> expr PLUS term .)
    RPARENT         reduce using rule 15 (expr -> expr PLUS term .)
    TIMES           shift and go to state 66
    POT             shift and go to state 67
    DIVIDE          shift and go to state 68
    PERCENT         shift and go to state 69


state 82

    (16) expr -> expr MINUS term .
    (19) term -> term . TIMES factor
    (20) term -> term . POT factor
    (21) term -> term . DIVIDE factor
    (22) term -> term . PERCENT factor

    PLUS            reduce using rule 16 (expr -> expr MINUS term .)
    MINUS           reduce using rule 16 (expr -> expr MINUS term .)
    BREAK           reduce using rule 16 (expr -> expr MINUS term .)
    WHILE           reduce using rule 16 (expr -> expr MINUS term .)
    FOR             reduce using rule 16 (expr -> expr MINUS term .)
    IF              reduce using rule 16 (expr -> expr MINUS term .)
    PRINT           reduce using rule 16 (expr -> expr MINUS term .)
    INPUT           reduce using rule 16 (expr -> expr MINUS term .)
    ID              reduce using rule 16 (expr -> expr MINUS term .)
    INT             reduce using rule 16 (expr -> expr MINUS term .)
    $end            reduce using rule 16 (expr -> expr MINUS term .)
    RPARENT         reduce using rule 16 (expr -> expr MINUS term .)
    TIMES           shift and go to state 66
    POT             shift and go to state 67
    DIVIDE          shift and go to state 68
    PERCENT         shift and go to state 69


state 83

    (19) term -> term TIMES factor .

    TIMES           reduce using rule 19 (term -> term TIMES factor .)
    POT             reduce using rule 19 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 19 (term -> term TIMES factor .)
    PERCENT         reduce using rule 19 (term -> term TIMES factor .)
    PLUS            reduce using rule 19 (term -> term TIMES factor .)
    MINUS           reduce using rule 19 (term -> term TIMES factor .)
    BREAK           reduce using rule 19 (term -> term TIMES factor .)
    WHILE           reduce using rule 19 (term -> term TIMES factor .)
    FOR             reduce using rule 19 (term -> term TIMES factor .)
    IF              reduce using rule 19 (term -> term TIMES factor .)
    PRINT           reduce using rule 19 (term -> term TIMES factor .)
    INPUT           reduce using rule 19 (term -> term TIMES factor .)
    ID              reduce using rule 19 (term -> term TIMES factor .)
    INT             reduce using rule 19 (term -> term TIMES factor .)
    $end            reduce using rule 19 (term -> term TIMES factor .)
    RPARENT         reduce using rule 19 (term -> term TIMES factor .)
    COMMA           reduce using rule 19 (term -> term TIMES factor .)


state 84

    (20) term -> term POT factor .

    TIMES           reduce using rule 20 (term -> term POT factor .)
    POT             reduce using rule 20 (term -> term POT factor .)
    DIVIDE          reduce using rule 20 (term -> term POT factor .)
    PERCENT         reduce using rule 20 (term -> term POT factor .)
    PLUS            reduce using rule 20 (term -> term POT factor .)
    MINUS           reduce using rule 20 (term -> term POT factor .)
    BREAK           reduce using rule 20 (term -> term POT factor .)
    WHILE           reduce using rule 20 (term -> term POT factor .)
    FOR             reduce using rule 20 (term -> term POT factor .)
    IF              reduce using rule 20 (term -> term POT factor .)
    PRINT           reduce using rule 20 (term -> term POT factor .)
    INPUT           reduce using rule 20 (term -> term POT factor .)
    ID              reduce using rule 20 (term -> term POT factor .)
    INT             reduce using rule 20 (term -> term POT factor .)
    $end            reduce using rule 20 (term -> term POT factor .)
    RPARENT         reduce using rule 20 (term -> term POT factor .)
    COMMA           reduce using rule 20 (term -> term POT factor .)


state 85

    (21) term -> term DIVIDE factor .

    TIMES           reduce using rule 21 (term -> term DIVIDE factor .)
    POT             reduce using rule 21 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 21 (term -> term DIVIDE factor .)
    PERCENT         reduce using rule 21 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 21 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 21 (term -> term DIVIDE factor .)
    BREAK           reduce using rule 21 (term -> term DIVIDE factor .)
    WHILE           reduce using rule 21 (term -> term DIVIDE factor .)
    FOR             reduce using rule 21 (term -> term DIVIDE factor .)
    IF              reduce using rule 21 (term -> term DIVIDE factor .)
    PRINT           reduce using rule 21 (term -> term DIVIDE factor .)
    INPUT           reduce using rule 21 (term -> term DIVIDE factor .)
    ID              reduce using rule 21 (term -> term DIVIDE factor .)
    INT             reduce using rule 21 (term -> term DIVIDE factor .)
    $end            reduce using rule 21 (term -> term DIVIDE factor .)
    RPARENT         reduce using rule 21 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 21 (term -> term DIVIDE factor .)


state 86

    (22) term -> term PERCENT factor .

    TIMES           reduce using rule 22 (term -> term PERCENT factor .)
    POT             reduce using rule 22 (term -> term PERCENT factor .)
    DIVIDE          reduce using rule 22 (term -> term PERCENT factor .)
    PERCENT         reduce using rule 22 (term -> term PERCENT factor .)
    PLUS            reduce using rule 22 (term -> term PERCENT factor .)
    MINUS           reduce using rule 22 (term -> term PERCENT factor .)
    BREAK           reduce using rule 22 (term -> term PERCENT factor .)
    WHILE           reduce using rule 22 (term -> term PERCENT factor .)
    FOR             reduce using rule 22 (term -> term PERCENT factor .)
    IF              reduce using rule 22 (term -> term PERCENT factor .)
    PRINT           reduce using rule 22 (term -> term PERCENT factor .)
    INPUT           reduce using rule 22 (term -> term PERCENT factor .)
    ID              reduce using rule 22 (term -> term PERCENT factor .)
    INT             reduce using rule 22 (term -> term PERCENT factor .)
    $end            reduce using rule 22 (term -> term PERCENT factor .)
    RPARENT         reduce using rule 22 (term -> term PERCENT factor .)
    COMMA           reduce using rule 22 (term -> term PERCENT factor .)


state 87

    (41) statementWhile -> WHILE condition COLOM statement break .
    (42) statementWhile -> WHILE condition COLOM statement break . statement
    (3) statement -> . assing
    (4) statement -> . statementWhile
    (5) statement -> . statementFor
    (6) statement -> . statementIf
    (7) statement -> . callPrint
    (8) statement -> . callInput
    (9) statement -> . BREAK
    (10) assing -> . id EQUALS expr
    (11) assing -> . id EQUALS callInput
    (12) assing -> . id PLUS PLUS
    (13) assing -> . id MINUS MINUS
    (40) statementWhile -> . WHILE condition COLOM statement
    (41) statementWhile -> . WHILE condition COLOM statement break
    (42) statementWhile -> . WHILE condition COLOM statement break statement
    (54) statementFor -> . FOR TEXT IN ID COLOM statement
    (55) statementFor -> . FOR TEXT IN form
    (39) statementIf -> . IF condition COLOM statement
    (29) callPrint -> . PRINT LPARENT term COMMA ID RPARENT
    (30) callPrint -> . PRINT group
    (31) callPrint -> . PRINT LPARENT RPARENT
    (32) callPrint -> . callPrint statement
    (34) callInput -> . INPUT group
    (35) callInput -> . int LPARENT INPUT group RPARENT
    (36) callInput -> . callInput statement
    (14) id -> . ID
    (38) int -> . INT

  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    $end            reduce using rule 41 (statementWhile -> WHILE condition COLOM statement break .)
    BREAK           shift and go to state 9
    WHILE           shift and go to state 11
    FOR             shift and go to state 12
    IF              shift and go to state 14
    PRINT           shift and go to state 15
    INPUT           shift and go to state 16
    ID              shift and go to state 13
    INT             shift and go to state 18

  ! BREAK           [ reduce using rule 41 (statementWhile -> WHILE condition COLOM statement break .) ]
  ! WHILE           [ reduce using rule 41 (statementWhile -> WHILE condition COLOM statement break .) ]
  ! FOR             [ reduce using rule 41 (statementWhile -> WHILE condition COLOM statement break .) ]
  ! IF              [ reduce using rule 41 (statementWhile -> WHILE condition COLOM statement break .) ]
  ! PRINT           [ reduce using rule 41 (statementWhile -> WHILE condition COLOM statement break .) ]
  ! INPUT           [ reduce using rule 41 (statementWhile -> WHILE condition COLOM statement break .) ]
  ! ID              [ reduce using rule 41 (statementWhile -> WHILE condition COLOM statement break .) ]
  ! INT             [ reduce using rule 41 (statementWhile -> WHILE condition COLOM statement break .) ]

    statement                      shift and go to state 93
    assing                         shift and go to state 3
    statementWhile                 shift and go to state 4
    statementFor                   shift and go to state 5
    statementIf                    shift and go to state 6
    callPrint                      shift and go to state 7
    callInput                      shift and go to state 8
    id                             shift and go to state 10
    int                            shift and go to state 17

state 88

    (37) break -> BREAK .

    BREAK           reduce using rule 37 (break -> BREAK .)
    WHILE           reduce using rule 37 (break -> BREAK .)
    FOR             reduce using rule 37 (break -> BREAK .)
    IF              reduce using rule 37 (break -> BREAK .)
    PRINT           reduce using rule 37 (break -> BREAK .)
    INPUT           reduce using rule 37 (break -> BREAK .)
    ID              reduce using rule 37 (break -> BREAK .)
    INT             reduce using rule 37 (break -> BREAK .)
    $end            reduce using rule 37 (break -> BREAK .)


state 89

    (54) statementFor -> FOR TEXT IN ID COLOM . statement
    (3) statement -> . assing
    (4) statement -> . statementWhile
    (5) statement -> . statementFor
    (6) statement -> . statementIf
    (7) statement -> . callPrint
    (8) statement -> . callInput
    (9) statement -> . BREAK
    (10) assing -> . id EQUALS expr
    (11) assing -> . id EQUALS callInput
    (12) assing -> . id PLUS PLUS
    (13) assing -> . id MINUS MINUS
    (40) statementWhile -> . WHILE condition COLOM statement
    (41) statementWhile -> . WHILE condition COLOM statement break
    (42) statementWhile -> . WHILE condition COLOM statement break statement
    (54) statementFor -> . FOR TEXT IN ID COLOM statement
    (55) statementFor -> . FOR TEXT IN form
    (39) statementIf -> . IF condition COLOM statement
    (29) callPrint -> . PRINT LPARENT term COMMA ID RPARENT
    (30) callPrint -> . PRINT group
    (31) callPrint -> . PRINT LPARENT RPARENT
    (32) callPrint -> . callPrint statement
    (34) callInput -> . INPUT group
    (35) callInput -> . int LPARENT INPUT group RPARENT
    (36) callInput -> . callInput statement
    (14) id -> . ID
    (38) int -> . INT

    BREAK           shift and go to state 9
    WHILE           shift and go to state 11
    FOR             shift and go to state 12
    IF              shift and go to state 14
    PRINT           shift and go to state 15
    INPUT           shift and go to state 16
    ID              shift and go to state 13
    INT             shift and go to state 18

    statement                      shift and go to state 94
    assing                         shift and go to state 3
    statementWhile                 shift and go to state 4
    statementFor                   shift and go to state 5
    statementIf                    shift and go to state 6
    callPrint                      shift and go to state 7
    callInput                      shift and go to state 8
    id                             shift and go to state 10
    int                            shift and go to state 17

state 90

    (56) form -> RANGE LPARENT . NUMBER RPARENT COLOM statement
    (57) form -> RANGE LPARENT . ID RPARENT COLOM
    (58) form -> RANGE LPARENT . LEN LPARENT id RPARENT RPARENT COLOM statement

    NUMBER          shift and go to state 95
    ID              shift and go to state 96
    LEN             shift and go to state 97


state 91

    (29) callPrint -> PRINT LPARENT term COMMA ID . RPARENT

    RPARENT         shift and go to state 98


state 92

    (35) callInput -> int LPARENT INPUT group RPARENT .

    BREAK           reduce using rule 35 (callInput -> int LPARENT INPUT group RPARENT .)
    WHILE           reduce using rule 35 (callInput -> int LPARENT INPUT group RPARENT .)
    FOR             reduce using rule 35 (callInput -> int LPARENT INPUT group RPARENT .)
    IF              reduce using rule 35 (callInput -> int LPARENT INPUT group RPARENT .)
    PRINT           reduce using rule 35 (callInput -> int LPARENT INPUT group RPARENT .)
    INPUT           reduce using rule 35 (callInput -> int LPARENT INPUT group RPARENT .)
    ID              reduce using rule 35 (callInput -> int LPARENT INPUT group RPARENT .)
    INT             reduce using rule 35 (callInput -> int LPARENT INPUT group RPARENT .)
    $end            reduce using rule 35 (callInput -> int LPARENT INPUT group RPARENT .)


state 93

    (42) statementWhile -> WHILE condition COLOM statement break statement .

    BREAK           reduce using rule 42 (statementWhile -> WHILE condition COLOM statement break statement .)
    WHILE           reduce using rule 42 (statementWhile -> WHILE condition COLOM statement break statement .)
    FOR             reduce using rule 42 (statementWhile -> WHILE condition COLOM statement break statement .)
    IF              reduce using rule 42 (statementWhile -> WHILE condition COLOM statement break statement .)
    PRINT           reduce using rule 42 (statementWhile -> WHILE condition COLOM statement break statement .)
    INPUT           reduce using rule 42 (statementWhile -> WHILE condition COLOM statement break statement .)
    ID              reduce using rule 42 (statementWhile -> WHILE condition COLOM statement break statement .)
    INT             reduce using rule 42 (statementWhile -> WHILE condition COLOM statement break statement .)
    $end            reduce using rule 42 (statementWhile -> WHILE condition COLOM statement break statement .)


state 94

    (54) statementFor -> FOR TEXT IN ID COLOM statement .

    BREAK           reduce using rule 54 (statementFor -> FOR TEXT IN ID COLOM statement .)
    WHILE           reduce using rule 54 (statementFor -> FOR TEXT IN ID COLOM statement .)
    FOR             reduce using rule 54 (statementFor -> FOR TEXT IN ID COLOM statement .)
    IF              reduce using rule 54 (statementFor -> FOR TEXT IN ID COLOM statement .)
    PRINT           reduce using rule 54 (statementFor -> FOR TEXT IN ID COLOM statement .)
    INPUT           reduce using rule 54 (statementFor -> FOR TEXT IN ID COLOM statement .)
    ID              reduce using rule 54 (statementFor -> FOR TEXT IN ID COLOM statement .)
    INT             reduce using rule 54 (statementFor -> FOR TEXT IN ID COLOM statement .)
    $end            reduce using rule 54 (statementFor -> FOR TEXT IN ID COLOM statement .)


state 95

    (56) form -> RANGE LPARENT NUMBER . RPARENT COLOM statement

    RPARENT         shift and go to state 99


state 96

    (57) form -> RANGE LPARENT ID . RPARENT COLOM

    RPARENT         shift and go to state 100


state 97

    (58) form -> RANGE LPARENT LEN . LPARENT id RPARENT RPARENT COLOM statement

    LPARENT         shift and go to state 101


state 98

    (29) callPrint -> PRINT LPARENT term COMMA ID RPARENT .

    BREAK           reduce using rule 29 (callPrint -> PRINT LPARENT term COMMA ID RPARENT .)
    WHILE           reduce using rule 29 (callPrint -> PRINT LPARENT term COMMA ID RPARENT .)
    FOR             reduce using rule 29 (callPrint -> PRINT LPARENT term COMMA ID RPARENT .)
    IF              reduce using rule 29 (callPrint -> PRINT LPARENT term COMMA ID RPARENT .)
    PRINT           reduce using rule 29 (callPrint -> PRINT LPARENT term COMMA ID RPARENT .)
    INPUT           reduce using rule 29 (callPrint -> PRINT LPARENT term COMMA ID RPARENT .)
    ID              reduce using rule 29 (callPrint -> PRINT LPARENT term COMMA ID RPARENT .)
    INT             reduce using rule 29 (callPrint -> PRINT LPARENT term COMMA ID RPARENT .)
    $end            reduce using rule 29 (callPrint -> PRINT LPARENT term COMMA ID RPARENT .)


state 99

    (56) form -> RANGE LPARENT NUMBER RPARENT . COLOM statement

    COLOM           shift and go to state 102


state 100

    (57) form -> RANGE LPARENT ID RPARENT . COLOM

    COLOM           shift and go to state 103


state 101

    (58) form -> RANGE LPARENT LEN LPARENT . id RPARENT RPARENT COLOM statement
    (14) id -> . ID

    ID              shift and go to state 13

    id                             shift and go to state 104

state 102

    (56) form -> RANGE LPARENT NUMBER RPARENT COLOM . statement
    (3) statement -> . assing
    (4) statement -> . statementWhile
    (5) statement -> . statementFor
    (6) statement -> . statementIf
    (7) statement -> . callPrint
    (8) statement -> . callInput
    (9) statement -> . BREAK
    (10) assing -> . id EQUALS expr
    (11) assing -> . id EQUALS callInput
    (12) assing -> . id PLUS PLUS
    (13) assing -> . id MINUS MINUS
    (40) statementWhile -> . WHILE condition COLOM statement
    (41) statementWhile -> . WHILE condition COLOM statement break
    (42) statementWhile -> . WHILE condition COLOM statement break statement
    (54) statementFor -> . FOR TEXT IN ID COLOM statement
    (55) statementFor -> . FOR TEXT IN form
    (39) statementIf -> . IF condition COLOM statement
    (29) callPrint -> . PRINT LPARENT term COMMA ID RPARENT
    (30) callPrint -> . PRINT group
    (31) callPrint -> . PRINT LPARENT RPARENT
    (32) callPrint -> . callPrint statement
    (34) callInput -> . INPUT group
    (35) callInput -> . int LPARENT INPUT group RPARENT
    (36) callInput -> . callInput statement
    (14) id -> . ID
    (38) int -> . INT

    BREAK           shift and go to state 9
    WHILE           shift and go to state 11
    FOR             shift and go to state 12
    IF              shift and go to state 14
    PRINT           shift and go to state 15
    INPUT           shift and go to state 16
    ID              shift and go to state 13
    INT             shift and go to state 18

    statement                      shift and go to state 105
    assing                         shift and go to state 3
    statementWhile                 shift and go to state 4
    statementFor                   shift and go to state 5
    statementIf                    shift and go to state 6
    callPrint                      shift and go to state 7
    callInput                      shift and go to state 8
    id                             shift and go to state 10
    int                            shift and go to state 17

state 103

    (57) form -> RANGE LPARENT ID RPARENT COLOM .

    BREAK           reduce using rule 57 (form -> RANGE LPARENT ID RPARENT COLOM .)
    WHILE           reduce using rule 57 (form -> RANGE LPARENT ID RPARENT COLOM .)
    FOR             reduce using rule 57 (form -> RANGE LPARENT ID RPARENT COLOM .)
    IF              reduce using rule 57 (form -> RANGE LPARENT ID RPARENT COLOM .)
    PRINT           reduce using rule 57 (form -> RANGE LPARENT ID RPARENT COLOM .)
    INPUT           reduce using rule 57 (form -> RANGE LPARENT ID RPARENT COLOM .)
    ID              reduce using rule 57 (form -> RANGE LPARENT ID RPARENT COLOM .)
    INT             reduce using rule 57 (form -> RANGE LPARENT ID RPARENT COLOM .)
    $end            reduce using rule 57 (form -> RANGE LPARENT ID RPARENT COLOM .)


state 104

    (58) form -> RANGE LPARENT LEN LPARENT id . RPARENT RPARENT COLOM statement

    RPARENT         shift and go to state 106


state 105

    (56) form -> RANGE LPARENT NUMBER RPARENT COLOM statement .

    BREAK           reduce using rule 56 (form -> RANGE LPARENT NUMBER RPARENT COLOM statement .)
    WHILE           reduce using rule 56 (form -> RANGE LPARENT NUMBER RPARENT COLOM statement .)
    FOR             reduce using rule 56 (form -> RANGE LPARENT NUMBER RPARENT COLOM statement .)
    IF              reduce using rule 56 (form -> RANGE LPARENT NUMBER RPARENT COLOM statement .)
    PRINT           reduce using rule 56 (form -> RANGE LPARENT NUMBER RPARENT COLOM statement .)
    INPUT           reduce using rule 56 (form -> RANGE LPARENT NUMBER RPARENT COLOM statement .)
    ID              reduce using rule 56 (form -> RANGE LPARENT NUMBER RPARENT COLOM statement .)
    INT             reduce using rule 56 (form -> RANGE LPARENT NUMBER RPARENT COLOM statement .)
    $end            reduce using rule 56 (form -> RANGE LPARENT NUMBER RPARENT COLOM statement .)


state 106

    (58) form -> RANGE LPARENT LEN LPARENT id RPARENT . RPARENT COLOM statement

    RPARENT         shift and go to state 107


state 107

    (58) form -> RANGE LPARENT LEN LPARENT id RPARENT RPARENT . COLOM statement

    COLOM           shift and go to state 108


state 108

    (58) form -> RANGE LPARENT LEN LPARENT id RPARENT RPARENT COLOM . statement
    (3) statement -> . assing
    (4) statement -> . statementWhile
    (5) statement -> . statementFor
    (6) statement -> . statementIf
    (7) statement -> . callPrint
    (8) statement -> . callInput
    (9) statement -> . BREAK
    (10) assing -> . id EQUALS expr
    (11) assing -> . id EQUALS callInput
    (12) assing -> . id PLUS PLUS
    (13) assing -> . id MINUS MINUS
    (40) statementWhile -> . WHILE condition COLOM statement
    (41) statementWhile -> . WHILE condition COLOM statement break
    (42) statementWhile -> . WHILE condition COLOM statement break statement
    (54) statementFor -> . FOR TEXT IN ID COLOM statement
    (55) statementFor -> . FOR TEXT IN form
    (39) statementIf -> . IF condition COLOM statement
    (29) callPrint -> . PRINT LPARENT term COMMA ID RPARENT
    (30) callPrint -> . PRINT group
    (31) callPrint -> . PRINT LPARENT RPARENT
    (32) callPrint -> . callPrint statement
    (34) callInput -> . INPUT group
    (35) callInput -> . int LPARENT INPUT group RPARENT
    (36) callInput -> . callInput statement
    (14) id -> . ID
    (38) int -> . INT

    BREAK           shift and go to state 9
    WHILE           shift and go to state 11
    FOR             shift and go to state 12
    IF              shift and go to state 14
    PRINT           shift and go to state 15
    INPUT           shift and go to state 16
    ID              shift and go to state 13
    INT             shift and go to state 18

    id                             shift and go to state 10
    statement                      shift and go to state 109
    assing                         shift and go to state 3
    statementWhile                 shift and go to state 4
    statementFor                   shift and go to state 5
    statementIf                    shift and go to state 6
    callPrint                      shift and go to state 7
    callInput                      shift and go to state 8
    int                            shift and go to state 17

state 109

    (58) form -> RANGE LPARENT LEN LPARENT id RPARENT RPARENT COLOM statement .

    BREAK           reduce using rule 58 (form -> RANGE LPARENT LEN LPARENT id RPARENT RPARENT COLOM statement .)
    WHILE           reduce using rule 58 (form -> RANGE LPARENT LEN LPARENT id RPARENT RPARENT COLOM statement .)
    FOR             reduce using rule 58 (form -> RANGE LPARENT LEN LPARENT id RPARENT RPARENT COLOM statement .)
    IF              reduce using rule 58 (form -> RANGE LPARENT LEN LPARENT id RPARENT RPARENT COLOM statement .)
    PRINT           reduce using rule 58 (form -> RANGE LPARENT LEN LPARENT id RPARENT RPARENT COLOM statement .)
    INPUT           reduce using rule 58 (form -> RANGE LPARENT LEN LPARENT id RPARENT RPARENT COLOM statement .)
    ID              reduce using rule 58 (form -> RANGE LPARENT LEN LPARENT id RPARENT RPARENT COLOM statement .)
    INT             reduce using rule 58 (form -> RANGE LPARENT LEN LPARENT id RPARENT RPARENT COLOM statement .)
    $end            reduce using rule 58 (form -> RANGE LPARENT LEN LPARENT id RPARENT RPARENT COLOM statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for BREAK in state 7 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 7 resolved as shift
WARNING: shift/reduce conflict for FOR in state 7 resolved as shift
WARNING: shift/reduce conflict for IF in state 7 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 7 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 7 resolved as shift
WARNING: shift/reduce conflict for ID in state 7 resolved as shift
WARNING: shift/reduce conflict for INT in state 7 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 8 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 8 resolved as shift
WARNING: shift/reduce conflict for FOR in state 8 resolved as shift
WARNING: shift/reduce conflict for IF in state 8 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 8 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 8 resolved as shift
WARNING: shift/reduce conflict for ID in state 8 resolved as shift
WARNING: shift/reduce conflict for INT in state 8 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 41 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 41 resolved as shift
WARNING: shift/reduce conflict for FOR in state 41 resolved as shift
WARNING: shift/reduce conflict for IF in state 41 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 41 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 41 resolved as shift
WARNING: shift/reduce conflict for ID in state 41 resolved as shift
WARNING: shift/reduce conflict for INT in state 41 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 71 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 87 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 87 resolved as shift
WARNING: shift/reduce conflict for FOR in state 87 resolved as shift
WARNING: shift/reduce conflict for IF in state 87 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 87 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 87 resolved as shift
WARNING: shift/reduce conflict for ID in state 87 resolved as shift
WARNING: shift/reduce conflict for INT in state 87 resolved as shift
